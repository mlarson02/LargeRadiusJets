// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module top_top_Pipeline_loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        filterArray_0_load,
        filterArray_1_load,
        filterArray_2_load,
        filterArray_3_load,
        filterArray_4_load,
        filterArray_5_load,
        filterArray_6_load,
        filterArray_7_load,
        filterArray_8_load,
        filterArray_9_load,
        filterArray_10_load,
        filterArray_11_load,
        filterArray_12_load,
        filterArray_13_load,
        filterArray_14_load,
        filterArray_15_load,
        filterArray_16_load,
        filterArray_17_load,
        filterArray_18_load,
        filterArray_19_load,
        filterArray_20_load,
        filterArray_21_load,
        filterArray_22_load,
        filterArray_23_load,
        filterArray_24_load,
        filterArray_25_load,
        filterArray_26_load,
        filterArray_27_load,
        filterArray_28_load,
        filterArray_29_load,
        filterArray_30_load,
        filterArray_31_load,
        filterArray_32_load,
        filterArray_33_load,
        filterArray_34_load,
        filterArray_35_load,
        filterArray_36_load,
        filterArray_37_load,
        filterArray_38_load,
        filterArray_39_load,
        filterArray_40_load,
        filterArray_41_load,
        filterArray_42_load,
        filterArray_43_load,
        filterArray_44_load,
        filterArray_45_load,
        filterArray_46_load,
        filterArray_47_load,
        filterArray_48_load,
        filterArray_49_load,
        filterArray_50_load,
        filterArray_51_load,
        filterArray_52_load,
        filterArray_53_load,
        filterArray_54_load,
        filterArray_55_load,
        filterArray_56_load,
        filterArray_57_load,
        filterArray_58_load,
        filterArray_59_load,
        filterArray_60_load,
        filterArray_61_load,
        filterArray_62_load,
        filterArray_63_load,
        filterArray_64_load,
        filterArray_65_load,
        filterArray_66_load,
        filterArray_67_load,
        filterArray_68_load,
        filterArray_69_load,
        filterArray_70_load,
        filterArray_71_load,
        filterArray_72_load,
        filterArray_73_load,
        filterArray_74_load,
        filterArray_75_load,
        filterArray_76_load,
        filterArray_77_load,
        filterArray_78_load,
        filterArray_79_load,
        filterArray_80_load,
        filterArray_81_load,
        filterArray_82_load,
        filterArray_83_load,
        filterArray_84_load,
        filterArray_85_load,
        filterArray_86_load,
        filterArray_87_load,
        filterArray_88_load,
        filterArray_89_load,
        filterArray_90_load,
        filterArray_91_load,
        filterArray_92_load,
        filterArray_93_load,
        filterArray_94_load,
        filterArray_95_load,
        filterArray_96_load,
        filterArray_97_load,
        filterArray_98_load,
        filterArray_99_load,
        filterArray_100_load,
        filterArray_101_load,
        filterArray_102_load,
        filterArray_103_load,
        filterArray_104_load,
        filterArray_105_load,
        filterArray_106_load,
        filterArray_107_load,
        filterArray_108_load,
        filterArray_109_load,
        filterArray_110_load,
        filterArray_111_load,
        filterArray_112_load,
        filterArray_113_load,
        filterArray_114_load,
        filterArray_115_load,
        filterArray_116_load,
        filterArray_117_load,
        filterArray_118_load,
        filterArray_119_load,
        filterArray_120_load,
        filterArray_121_load,
        filterArray_122_load,
        filterArray_123_load,
        filterArray_124_load,
        filterArray_125_load,
        filterArray_126_load,
        filterArray_127_load,
        bitmask1_1_out,
        bitmask1_1_out_ap_vld,
        bitmask2_1_out,
        bitmask2_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [12:0] filterArray_0_load;
input  [12:0] filterArray_1_load;
input  [12:0] filterArray_2_load;
input  [12:0] filterArray_3_load;
input  [12:0] filterArray_4_load;
input  [12:0] filterArray_5_load;
input  [12:0] filterArray_6_load;
input  [12:0] filterArray_7_load;
input  [12:0] filterArray_8_load;
input  [12:0] filterArray_9_load;
input  [12:0] filterArray_10_load;
input  [12:0] filterArray_11_load;
input  [12:0] filterArray_12_load;
input  [12:0] filterArray_13_load;
input  [12:0] filterArray_14_load;
input  [12:0] filterArray_15_load;
input  [12:0] filterArray_16_load;
input  [12:0] filterArray_17_load;
input  [12:0] filterArray_18_load;
input  [12:0] filterArray_19_load;
input  [12:0] filterArray_20_load;
input  [12:0] filterArray_21_load;
input  [12:0] filterArray_22_load;
input  [12:0] filterArray_23_load;
input  [12:0] filterArray_24_load;
input  [12:0] filterArray_25_load;
input  [12:0] filterArray_26_load;
input  [12:0] filterArray_27_load;
input  [12:0] filterArray_28_load;
input  [12:0] filterArray_29_load;
input  [12:0] filterArray_30_load;
input  [12:0] filterArray_31_load;
input  [12:0] filterArray_32_load;
input  [12:0] filterArray_33_load;
input  [12:0] filterArray_34_load;
input  [12:0] filterArray_35_load;
input  [12:0] filterArray_36_load;
input  [12:0] filterArray_37_load;
input  [12:0] filterArray_38_load;
input  [12:0] filterArray_39_load;
input  [12:0] filterArray_40_load;
input  [12:0] filterArray_41_load;
input  [12:0] filterArray_42_load;
input  [12:0] filterArray_43_load;
input  [12:0] filterArray_44_load;
input  [12:0] filterArray_45_load;
input  [12:0] filterArray_46_load;
input  [12:0] filterArray_47_load;
input  [12:0] filterArray_48_load;
input  [12:0] filterArray_49_load;
input  [12:0] filterArray_50_load;
input  [12:0] filterArray_51_load;
input  [12:0] filterArray_52_load;
input  [12:0] filterArray_53_load;
input  [12:0] filterArray_54_load;
input  [12:0] filterArray_55_load;
input  [12:0] filterArray_56_load;
input  [12:0] filterArray_57_load;
input  [12:0] filterArray_58_load;
input  [12:0] filterArray_59_load;
input  [12:0] filterArray_60_load;
input  [12:0] filterArray_61_load;
input  [12:0] filterArray_62_load;
input  [12:0] filterArray_63_load;
input  [12:0] filterArray_64_load;
input  [12:0] filterArray_65_load;
input  [12:0] filterArray_66_load;
input  [12:0] filterArray_67_load;
input  [12:0] filterArray_68_load;
input  [12:0] filterArray_69_load;
input  [12:0] filterArray_70_load;
input  [12:0] filterArray_71_load;
input  [12:0] filterArray_72_load;
input  [12:0] filterArray_73_load;
input  [12:0] filterArray_74_load;
input  [12:0] filterArray_75_load;
input  [12:0] filterArray_76_load;
input  [12:0] filterArray_77_load;
input  [12:0] filterArray_78_load;
input  [12:0] filterArray_79_load;
input  [12:0] filterArray_80_load;
input  [12:0] filterArray_81_load;
input  [12:0] filterArray_82_load;
input  [12:0] filterArray_83_load;
input  [12:0] filterArray_84_load;
input  [12:0] filterArray_85_load;
input  [12:0] filterArray_86_load;
input  [12:0] filterArray_87_load;
input  [12:0] filterArray_88_load;
input  [12:0] filterArray_89_load;
input  [12:0] filterArray_90_load;
input  [12:0] filterArray_91_load;
input  [12:0] filterArray_92_load;
input  [12:0] filterArray_93_load;
input  [12:0] filterArray_94_load;
input  [12:0] filterArray_95_load;
input  [12:0] filterArray_96_load;
input  [12:0] filterArray_97_load;
input  [12:0] filterArray_98_load;
input  [12:0] filterArray_99_load;
input  [12:0] filterArray_100_load;
input  [12:0] filterArray_101_load;
input  [12:0] filterArray_102_load;
input  [12:0] filterArray_103_load;
input  [12:0] filterArray_104_load;
input  [12:0] filterArray_105_load;
input  [12:0] filterArray_106_load;
input  [12:0] filterArray_107_load;
input  [12:0] filterArray_108_load;
input  [12:0] filterArray_109_load;
input  [12:0] filterArray_110_load;
input  [12:0] filterArray_111_load;
input  [12:0] filterArray_112_load;
input  [12:0] filterArray_113_load;
input  [12:0] filterArray_114_load;
input  [12:0] filterArray_115_load;
input  [12:0] filterArray_116_load;
input  [12:0] filterArray_117_load;
input  [12:0] filterArray_118_load;
input  [12:0] filterArray_119_load;
input  [12:0] filterArray_120_load;
input  [12:0] filterArray_121_load;
input  [12:0] filterArray_122_load;
input  [12:0] filterArray_123_load;
input  [12:0] filterArray_124_load;
input  [12:0] filterArray_125_load;
input  [12:0] filterArray_126_load;
input  [12:0] filterArray_127_load;
output  [4095:0] bitmask1_1_out;
output   bitmask1_1_out_ap_vld;
output  [4095:0] bitmask2_1_out;
output   bitmask2_1_out_ap_vld;

reg ap_idle;
reg bitmask1_1_out_ap_vld;
reg bitmask2_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln12_fu_1382_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [12:0] temp_fu_1392_p259;
reg   [12:0] temp_reg_2049;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_2054;
wire   [4095:0] shl_ln17_fu_1954_p2;
reg   [4095:0] shl_ln17_reg_2060;
reg   [4095:0] bitmask2_fu_564;
wire   [4095:0] bitmask2_1_fu_1986_p2;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [4095:0] bitmask1_fu_568;
wire   [4095:0] bitmask1_1_fu_1999_p2;
reg   [7:0] iInput_fu_572;
wire   [7:0] add_ln12_fu_1376_p2;
reg   [7:0] ap_sig_allocacmp_iInput_2;
wire    ap_block_pp0_stage0_01001;
wire   [12:0] temp_fu_1392_p257;
wire   [6:0] temp_fu_1392_p258;
wire   [0:0] bit_sel_fu_1920_p3;
wire   [0:0] xor_ln17_fu_1928_p2;
wire   [11:0] trunc_ln17_fu_1934_p1;
wire   [12:0] xor_ln_fu_1938_p3;
wire  signed [31:0] sext_ln17_fu_1946_p1;
wire   [4095:0] zext_ln17_fu_1950_p1;
wire   [4095:0] zext_ln15_fu_1971_p1;
wire   [4095:0] bitmask2_2_fu_1980_p3;
wire   [4095:0] shl_ln15_fu_1974_p2;
wire   [4095:0] bitmask1_2_fu_1992_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [6:0] temp_fu_1392_p1;
wire   [6:0] temp_fu_1392_p3;
wire   [6:0] temp_fu_1392_p5;
wire   [6:0] temp_fu_1392_p7;
wire   [6:0] temp_fu_1392_p9;
wire   [6:0] temp_fu_1392_p11;
wire   [6:0] temp_fu_1392_p13;
wire   [6:0] temp_fu_1392_p15;
wire   [6:0] temp_fu_1392_p17;
wire   [6:0] temp_fu_1392_p19;
wire   [6:0] temp_fu_1392_p21;
wire   [6:0] temp_fu_1392_p23;
wire   [6:0] temp_fu_1392_p25;
wire   [6:0] temp_fu_1392_p27;
wire   [6:0] temp_fu_1392_p29;
wire   [6:0] temp_fu_1392_p31;
wire   [6:0] temp_fu_1392_p33;
wire   [6:0] temp_fu_1392_p35;
wire   [6:0] temp_fu_1392_p37;
wire   [6:0] temp_fu_1392_p39;
wire   [6:0] temp_fu_1392_p41;
wire   [6:0] temp_fu_1392_p43;
wire   [6:0] temp_fu_1392_p45;
wire   [6:0] temp_fu_1392_p47;
wire   [6:0] temp_fu_1392_p49;
wire   [6:0] temp_fu_1392_p51;
wire   [6:0] temp_fu_1392_p53;
wire   [6:0] temp_fu_1392_p55;
wire   [6:0] temp_fu_1392_p57;
wire   [6:0] temp_fu_1392_p59;
wire   [6:0] temp_fu_1392_p61;
wire   [6:0] temp_fu_1392_p63;
wire   [6:0] temp_fu_1392_p65;
wire   [6:0] temp_fu_1392_p67;
wire   [6:0] temp_fu_1392_p69;
wire   [6:0] temp_fu_1392_p71;
wire   [6:0] temp_fu_1392_p73;
wire   [6:0] temp_fu_1392_p75;
wire   [6:0] temp_fu_1392_p77;
wire   [6:0] temp_fu_1392_p79;
wire   [6:0] temp_fu_1392_p81;
wire   [6:0] temp_fu_1392_p83;
wire   [6:0] temp_fu_1392_p85;
wire   [6:0] temp_fu_1392_p87;
wire   [6:0] temp_fu_1392_p89;
wire   [6:0] temp_fu_1392_p91;
wire   [6:0] temp_fu_1392_p93;
wire   [6:0] temp_fu_1392_p95;
wire   [6:0] temp_fu_1392_p97;
wire   [6:0] temp_fu_1392_p99;
wire   [6:0] temp_fu_1392_p101;
wire   [6:0] temp_fu_1392_p103;
wire   [6:0] temp_fu_1392_p105;
wire   [6:0] temp_fu_1392_p107;
wire   [6:0] temp_fu_1392_p109;
wire   [6:0] temp_fu_1392_p111;
wire   [6:0] temp_fu_1392_p113;
wire   [6:0] temp_fu_1392_p115;
wire   [6:0] temp_fu_1392_p117;
wire   [6:0] temp_fu_1392_p119;
wire   [6:0] temp_fu_1392_p121;
wire   [6:0] temp_fu_1392_p123;
wire   [6:0] temp_fu_1392_p125;
wire   [6:0] temp_fu_1392_p127;
wire  signed [6:0] temp_fu_1392_p129;
wire  signed [6:0] temp_fu_1392_p131;
wire  signed [6:0] temp_fu_1392_p133;
wire  signed [6:0] temp_fu_1392_p135;
wire  signed [6:0] temp_fu_1392_p137;
wire  signed [6:0] temp_fu_1392_p139;
wire  signed [6:0] temp_fu_1392_p141;
wire  signed [6:0] temp_fu_1392_p143;
wire  signed [6:0] temp_fu_1392_p145;
wire  signed [6:0] temp_fu_1392_p147;
wire  signed [6:0] temp_fu_1392_p149;
wire  signed [6:0] temp_fu_1392_p151;
wire  signed [6:0] temp_fu_1392_p153;
wire  signed [6:0] temp_fu_1392_p155;
wire  signed [6:0] temp_fu_1392_p157;
wire  signed [6:0] temp_fu_1392_p159;
wire  signed [6:0] temp_fu_1392_p161;
wire  signed [6:0] temp_fu_1392_p163;
wire  signed [6:0] temp_fu_1392_p165;
wire  signed [6:0] temp_fu_1392_p167;
wire  signed [6:0] temp_fu_1392_p169;
wire  signed [6:0] temp_fu_1392_p171;
wire  signed [6:0] temp_fu_1392_p173;
wire  signed [6:0] temp_fu_1392_p175;
wire  signed [6:0] temp_fu_1392_p177;
wire  signed [6:0] temp_fu_1392_p179;
wire  signed [6:0] temp_fu_1392_p181;
wire  signed [6:0] temp_fu_1392_p183;
wire  signed [6:0] temp_fu_1392_p185;
wire  signed [6:0] temp_fu_1392_p187;
wire  signed [6:0] temp_fu_1392_p189;
wire  signed [6:0] temp_fu_1392_p191;
wire  signed [6:0] temp_fu_1392_p193;
wire  signed [6:0] temp_fu_1392_p195;
wire  signed [6:0] temp_fu_1392_p197;
wire  signed [6:0] temp_fu_1392_p199;
wire  signed [6:0] temp_fu_1392_p201;
wire  signed [6:0] temp_fu_1392_p203;
wire  signed [6:0] temp_fu_1392_p205;
wire  signed [6:0] temp_fu_1392_p207;
wire  signed [6:0] temp_fu_1392_p209;
wire  signed [6:0] temp_fu_1392_p211;
wire  signed [6:0] temp_fu_1392_p213;
wire  signed [6:0] temp_fu_1392_p215;
wire  signed [6:0] temp_fu_1392_p217;
wire  signed [6:0] temp_fu_1392_p219;
wire  signed [6:0] temp_fu_1392_p221;
wire  signed [6:0] temp_fu_1392_p223;
wire  signed [6:0] temp_fu_1392_p225;
wire  signed [6:0] temp_fu_1392_p227;
wire  signed [6:0] temp_fu_1392_p229;
wire  signed [6:0] temp_fu_1392_p231;
wire  signed [6:0] temp_fu_1392_p233;
wire  signed [6:0] temp_fu_1392_p235;
wire  signed [6:0] temp_fu_1392_p237;
wire  signed [6:0] temp_fu_1392_p239;
wire  signed [6:0] temp_fu_1392_p241;
wire  signed [6:0] temp_fu_1392_p243;
wire  signed [6:0] temp_fu_1392_p245;
wire  signed [6:0] temp_fu_1392_p247;
wire  signed [6:0] temp_fu_1392_p249;
wire  signed [6:0] temp_fu_1392_p251;
wire  signed [6:0] temp_fu_1392_p253;
wire  signed [6:0] temp_fu_1392_p255;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 bitmask2_fu_564 = 4096'd0;
#0 bitmask1_fu_568 = 4096'd0;
#0 iInput_fu_572 = 8'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) top_sparsemux_257_7_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 7'h0 ),
    .din0_WIDTH( 13 ),
    .CASE1( 7'h1 ),
    .din1_WIDTH( 13 ),
    .CASE2( 7'h2 ),
    .din2_WIDTH( 13 ),
    .CASE3( 7'h3 ),
    .din3_WIDTH( 13 ),
    .CASE4( 7'h4 ),
    .din4_WIDTH( 13 ),
    .CASE5( 7'h5 ),
    .din5_WIDTH( 13 ),
    .CASE6( 7'h6 ),
    .din6_WIDTH( 13 ),
    .CASE7( 7'h7 ),
    .din7_WIDTH( 13 ),
    .CASE8( 7'h8 ),
    .din8_WIDTH( 13 ),
    .CASE9( 7'h9 ),
    .din9_WIDTH( 13 ),
    .CASE10( 7'hA ),
    .din10_WIDTH( 13 ),
    .CASE11( 7'hB ),
    .din11_WIDTH( 13 ),
    .CASE12( 7'hC ),
    .din12_WIDTH( 13 ),
    .CASE13( 7'hD ),
    .din13_WIDTH( 13 ),
    .CASE14( 7'hE ),
    .din14_WIDTH( 13 ),
    .CASE15( 7'hF ),
    .din15_WIDTH( 13 ),
    .CASE16( 7'h10 ),
    .din16_WIDTH( 13 ),
    .CASE17( 7'h11 ),
    .din17_WIDTH( 13 ),
    .CASE18( 7'h12 ),
    .din18_WIDTH( 13 ),
    .CASE19( 7'h13 ),
    .din19_WIDTH( 13 ),
    .CASE20( 7'h14 ),
    .din20_WIDTH( 13 ),
    .CASE21( 7'h15 ),
    .din21_WIDTH( 13 ),
    .CASE22( 7'h16 ),
    .din22_WIDTH( 13 ),
    .CASE23( 7'h17 ),
    .din23_WIDTH( 13 ),
    .CASE24( 7'h18 ),
    .din24_WIDTH( 13 ),
    .CASE25( 7'h19 ),
    .din25_WIDTH( 13 ),
    .CASE26( 7'h1A ),
    .din26_WIDTH( 13 ),
    .CASE27( 7'h1B ),
    .din27_WIDTH( 13 ),
    .CASE28( 7'h1C ),
    .din28_WIDTH( 13 ),
    .CASE29( 7'h1D ),
    .din29_WIDTH( 13 ),
    .CASE30( 7'h1E ),
    .din30_WIDTH( 13 ),
    .CASE31( 7'h1F ),
    .din31_WIDTH( 13 ),
    .CASE32( 7'h20 ),
    .din32_WIDTH( 13 ),
    .CASE33( 7'h21 ),
    .din33_WIDTH( 13 ),
    .CASE34( 7'h22 ),
    .din34_WIDTH( 13 ),
    .CASE35( 7'h23 ),
    .din35_WIDTH( 13 ),
    .CASE36( 7'h24 ),
    .din36_WIDTH( 13 ),
    .CASE37( 7'h25 ),
    .din37_WIDTH( 13 ),
    .CASE38( 7'h26 ),
    .din38_WIDTH( 13 ),
    .CASE39( 7'h27 ),
    .din39_WIDTH( 13 ),
    .CASE40( 7'h28 ),
    .din40_WIDTH( 13 ),
    .CASE41( 7'h29 ),
    .din41_WIDTH( 13 ),
    .CASE42( 7'h2A ),
    .din42_WIDTH( 13 ),
    .CASE43( 7'h2B ),
    .din43_WIDTH( 13 ),
    .CASE44( 7'h2C ),
    .din44_WIDTH( 13 ),
    .CASE45( 7'h2D ),
    .din45_WIDTH( 13 ),
    .CASE46( 7'h2E ),
    .din46_WIDTH( 13 ),
    .CASE47( 7'h2F ),
    .din47_WIDTH( 13 ),
    .CASE48( 7'h30 ),
    .din48_WIDTH( 13 ),
    .CASE49( 7'h31 ),
    .din49_WIDTH( 13 ),
    .CASE50( 7'h32 ),
    .din50_WIDTH( 13 ),
    .CASE51( 7'h33 ),
    .din51_WIDTH( 13 ),
    .CASE52( 7'h34 ),
    .din52_WIDTH( 13 ),
    .CASE53( 7'h35 ),
    .din53_WIDTH( 13 ),
    .CASE54( 7'h36 ),
    .din54_WIDTH( 13 ),
    .CASE55( 7'h37 ),
    .din55_WIDTH( 13 ),
    .CASE56( 7'h38 ),
    .din56_WIDTH( 13 ),
    .CASE57( 7'h39 ),
    .din57_WIDTH( 13 ),
    .CASE58( 7'h3A ),
    .din58_WIDTH( 13 ),
    .CASE59( 7'h3B ),
    .din59_WIDTH( 13 ),
    .CASE60( 7'h3C ),
    .din60_WIDTH( 13 ),
    .CASE61( 7'h3D ),
    .din61_WIDTH( 13 ),
    .CASE62( 7'h3E ),
    .din62_WIDTH( 13 ),
    .CASE63( 7'h3F ),
    .din63_WIDTH( 13 ),
    .CASE64( 7'h40 ),
    .din64_WIDTH( 13 ),
    .CASE65( 7'h41 ),
    .din65_WIDTH( 13 ),
    .CASE66( 7'h42 ),
    .din66_WIDTH( 13 ),
    .CASE67( 7'h43 ),
    .din67_WIDTH( 13 ),
    .CASE68( 7'h44 ),
    .din68_WIDTH( 13 ),
    .CASE69( 7'h45 ),
    .din69_WIDTH( 13 ),
    .CASE70( 7'h46 ),
    .din70_WIDTH( 13 ),
    .CASE71( 7'h47 ),
    .din71_WIDTH( 13 ),
    .CASE72( 7'h48 ),
    .din72_WIDTH( 13 ),
    .CASE73( 7'h49 ),
    .din73_WIDTH( 13 ),
    .CASE74( 7'h4A ),
    .din74_WIDTH( 13 ),
    .CASE75( 7'h4B ),
    .din75_WIDTH( 13 ),
    .CASE76( 7'h4C ),
    .din76_WIDTH( 13 ),
    .CASE77( 7'h4D ),
    .din77_WIDTH( 13 ),
    .CASE78( 7'h4E ),
    .din78_WIDTH( 13 ),
    .CASE79( 7'h4F ),
    .din79_WIDTH( 13 ),
    .CASE80( 7'h50 ),
    .din80_WIDTH( 13 ),
    .CASE81( 7'h51 ),
    .din81_WIDTH( 13 ),
    .CASE82( 7'h52 ),
    .din82_WIDTH( 13 ),
    .CASE83( 7'h53 ),
    .din83_WIDTH( 13 ),
    .CASE84( 7'h54 ),
    .din84_WIDTH( 13 ),
    .CASE85( 7'h55 ),
    .din85_WIDTH( 13 ),
    .CASE86( 7'h56 ),
    .din86_WIDTH( 13 ),
    .CASE87( 7'h57 ),
    .din87_WIDTH( 13 ),
    .CASE88( 7'h58 ),
    .din88_WIDTH( 13 ),
    .CASE89( 7'h59 ),
    .din89_WIDTH( 13 ),
    .CASE90( 7'h5A ),
    .din90_WIDTH( 13 ),
    .CASE91( 7'h5B ),
    .din91_WIDTH( 13 ),
    .CASE92( 7'h5C ),
    .din92_WIDTH( 13 ),
    .CASE93( 7'h5D ),
    .din93_WIDTH( 13 ),
    .CASE94( 7'h5E ),
    .din94_WIDTH( 13 ),
    .CASE95( 7'h5F ),
    .din95_WIDTH( 13 ),
    .CASE96( 7'h60 ),
    .din96_WIDTH( 13 ),
    .CASE97( 7'h61 ),
    .din97_WIDTH( 13 ),
    .CASE98( 7'h62 ),
    .din98_WIDTH( 13 ),
    .CASE99( 7'h63 ),
    .din99_WIDTH( 13 ),
    .CASE100( 7'h64 ),
    .din100_WIDTH( 13 ),
    .CASE101( 7'h65 ),
    .din101_WIDTH( 13 ),
    .CASE102( 7'h66 ),
    .din102_WIDTH( 13 ),
    .CASE103( 7'h67 ),
    .din103_WIDTH( 13 ),
    .CASE104( 7'h68 ),
    .din104_WIDTH( 13 ),
    .CASE105( 7'h69 ),
    .din105_WIDTH( 13 ),
    .CASE106( 7'h6A ),
    .din106_WIDTH( 13 ),
    .CASE107( 7'h6B ),
    .din107_WIDTH( 13 ),
    .CASE108( 7'h6C ),
    .din108_WIDTH( 13 ),
    .CASE109( 7'h6D ),
    .din109_WIDTH( 13 ),
    .CASE110( 7'h6E ),
    .din110_WIDTH( 13 ),
    .CASE111( 7'h6F ),
    .din111_WIDTH( 13 ),
    .CASE112( 7'h70 ),
    .din112_WIDTH( 13 ),
    .CASE113( 7'h71 ),
    .din113_WIDTH( 13 ),
    .CASE114( 7'h72 ),
    .din114_WIDTH( 13 ),
    .CASE115( 7'h73 ),
    .din115_WIDTH( 13 ),
    .CASE116( 7'h74 ),
    .din116_WIDTH( 13 ),
    .CASE117( 7'h75 ),
    .din117_WIDTH( 13 ),
    .CASE118( 7'h76 ),
    .din118_WIDTH( 13 ),
    .CASE119( 7'h77 ),
    .din119_WIDTH( 13 ),
    .CASE120( 7'h78 ),
    .din120_WIDTH( 13 ),
    .CASE121( 7'h79 ),
    .din121_WIDTH( 13 ),
    .CASE122( 7'h7A ),
    .din122_WIDTH( 13 ),
    .CASE123( 7'h7B ),
    .din123_WIDTH( 13 ),
    .CASE124( 7'h7C ),
    .din124_WIDTH( 13 ),
    .CASE125( 7'h7D ),
    .din125_WIDTH( 13 ),
    .CASE126( 7'h7E ),
    .din126_WIDTH( 13 ),
    .CASE127( 7'h7F ),
    .din127_WIDTH( 13 ),
    .def_WIDTH( 13 ),
    .sel_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
sparsemux_257_7_13_1_1_U1(
    .din0(filterArray_0_load),
    .din1(filterArray_1_load),
    .din2(filterArray_2_load),
    .din3(filterArray_3_load),
    .din4(filterArray_4_load),
    .din5(filterArray_5_load),
    .din6(filterArray_6_load),
    .din7(filterArray_7_load),
    .din8(filterArray_8_load),
    .din9(filterArray_9_load),
    .din10(filterArray_10_load),
    .din11(filterArray_11_load),
    .din12(filterArray_12_load),
    .din13(filterArray_13_load),
    .din14(filterArray_14_load),
    .din15(filterArray_15_load),
    .din16(filterArray_16_load),
    .din17(filterArray_17_load),
    .din18(filterArray_18_load),
    .din19(filterArray_19_load),
    .din20(filterArray_20_load),
    .din21(filterArray_21_load),
    .din22(filterArray_22_load),
    .din23(filterArray_23_load),
    .din24(filterArray_24_load),
    .din25(filterArray_25_load),
    .din26(filterArray_26_load),
    .din27(filterArray_27_load),
    .din28(filterArray_28_load),
    .din29(filterArray_29_load),
    .din30(filterArray_30_load),
    .din31(filterArray_31_load),
    .din32(filterArray_32_load),
    .din33(filterArray_33_load),
    .din34(filterArray_34_load),
    .din35(filterArray_35_load),
    .din36(filterArray_36_load),
    .din37(filterArray_37_load),
    .din38(filterArray_38_load),
    .din39(filterArray_39_load),
    .din40(filterArray_40_load),
    .din41(filterArray_41_load),
    .din42(filterArray_42_load),
    .din43(filterArray_43_load),
    .din44(filterArray_44_load),
    .din45(filterArray_45_load),
    .din46(filterArray_46_load),
    .din47(filterArray_47_load),
    .din48(filterArray_48_load),
    .din49(filterArray_49_load),
    .din50(filterArray_50_load),
    .din51(filterArray_51_load),
    .din52(filterArray_52_load),
    .din53(filterArray_53_load),
    .din54(filterArray_54_load),
    .din55(filterArray_55_load),
    .din56(filterArray_56_load),
    .din57(filterArray_57_load),
    .din58(filterArray_58_load),
    .din59(filterArray_59_load),
    .din60(filterArray_60_load),
    .din61(filterArray_61_load),
    .din62(filterArray_62_load),
    .din63(filterArray_63_load),
    .din64(filterArray_64_load),
    .din65(filterArray_65_load),
    .din66(filterArray_66_load),
    .din67(filterArray_67_load),
    .din68(filterArray_68_load),
    .din69(filterArray_69_load),
    .din70(filterArray_70_load),
    .din71(filterArray_71_load),
    .din72(filterArray_72_load),
    .din73(filterArray_73_load),
    .din74(filterArray_74_load),
    .din75(filterArray_75_load),
    .din76(filterArray_76_load),
    .din77(filterArray_77_load),
    .din78(filterArray_78_load),
    .din79(filterArray_79_load),
    .din80(filterArray_80_load),
    .din81(filterArray_81_load),
    .din82(filterArray_82_load),
    .din83(filterArray_83_load),
    .din84(filterArray_84_load),
    .din85(filterArray_85_load),
    .din86(filterArray_86_load),
    .din87(filterArray_87_load),
    .din88(filterArray_88_load),
    .din89(filterArray_89_load),
    .din90(filterArray_90_load),
    .din91(filterArray_91_load),
    .din92(filterArray_92_load),
    .din93(filterArray_93_load),
    .din94(filterArray_94_load),
    .din95(filterArray_95_load),
    .din96(filterArray_96_load),
    .din97(filterArray_97_load),
    .din98(filterArray_98_load),
    .din99(filterArray_99_load),
    .din100(filterArray_100_load),
    .din101(filterArray_101_load),
    .din102(filterArray_102_load),
    .din103(filterArray_103_load),
    .din104(filterArray_104_load),
    .din105(filterArray_105_load),
    .din106(filterArray_106_load),
    .din107(filterArray_107_load),
    .din108(filterArray_108_load),
    .din109(filterArray_109_load),
    .din110(filterArray_110_load),
    .din111(filterArray_111_load),
    .din112(filterArray_112_load),
    .din113(filterArray_113_load),
    .din114(filterArray_114_load),
    .din115(filterArray_115_load),
    .din116(filterArray_116_load),
    .din117(filterArray_117_load),
    .din118(filterArray_118_load),
    .din119(filterArray_119_load),
    .din120(filterArray_120_load),
    .din121(filterArray_121_load),
    .din122(filterArray_122_load),
    .din123(filterArray_123_load),
    .din124(filterArray_124_load),
    .din125(filterArray_125_load),
    .din126(filterArray_126_load),
    .din127(filterArray_127_load),
    .def(temp_fu_1392_p257),
    .sel(temp_fu_1392_p258),
    .dout(temp_fu_1392_p259)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bitmask1_fu_568 <= 4096'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            bitmask1_fu_568 <= bitmask1_1_fu_1999_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            bitmask2_fu_564 <= 4096'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            bitmask2_fu_564 <= bitmask2_1_fu_1986_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln12_fu_1382_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            iInput_fu_572 <= add_ln12_fu_1376_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            iInput_fu_572 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shl_ln17_reg_2060 <= shl_ln17_fu_1954_p2;
        temp_reg_2049 <= temp_fu_1392_p259;
        tmp_reg_2054 <= temp_fu_1392_p259[32'd12];
    end
end

always @ (*) begin
    if (((icmp_ln12_fu_1382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_iInput_2 = 8'd0;
    end else begin
        ap_sig_allocacmp_iInput_2 = iInput_fu_572;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln12_fu_1382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bitmask1_1_out_ap_vld = 1'b1;
    end else begin
        bitmask1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln12_fu_1382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bitmask2_1_out_ap_vld = 1'b1;
    end else begin
        bitmask2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_1376_p2 = (ap_sig_allocacmp_iInput_2 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_1920_p3 = temp_fu_1392_p259[13'd12];

assign bitmask1_1_fu_1999_p2 = (bitmask1_fu_568 | bitmask1_2_fu_1992_p3);

assign bitmask1_1_out = bitmask1_fu_568;

assign bitmask1_2_fu_1992_p3 = ((tmp_reg_2054[0:0] == 1'b1) ? 4096'd0 : shl_ln15_fu_1974_p2);

assign bitmask2_1_fu_1986_p2 = (bitmask2_fu_564 | bitmask2_2_fu_1980_p3);

assign bitmask2_1_out = bitmask2_fu_564;

assign bitmask2_2_fu_1980_p3 = ((tmp_reg_2054[0:0] == 1'b1) ? shl_ln17_reg_2060 : 4096'd0);

assign icmp_ln12_fu_1382_p2 = ((ap_sig_allocacmp_iInput_2 == 8'd128) ? 1'b1 : 1'b0);

assign sext_ln17_fu_1946_p1 = $signed(xor_ln_fu_1938_p3);

assign shl_ln15_fu_1974_p2 = 4096'd1 << zext_ln15_fu_1971_p1;

assign shl_ln17_fu_1954_p2 = 4096'd1 << zext_ln17_fu_1950_p1;

assign temp_fu_1392_p257 = 'bx;

assign temp_fu_1392_p258 = ap_sig_allocacmp_iInput_2[6:0];

assign trunc_ln17_fu_1934_p1 = temp_fu_1392_p259[11:0];

assign xor_ln17_fu_1928_p2 = (bit_sel_fu_1920_p3 ^ 1'd1);

assign xor_ln_fu_1938_p3 = {{xor_ln17_fu_1928_p2}, {trunc_ln17_fu_1934_p1}};

assign zext_ln15_fu_1971_p1 = temp_reg_2049;

assign zext_ln17_fu_1950_p1 = $unsigned(sext_ln17_fu_1946_p1);

endmodule //top_top_Pipeline_loop1
